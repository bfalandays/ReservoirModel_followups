theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors2.4 = cors2
pCors2.4$node=factor(pCors2.4$node, levels = c(order4))
p2.4=ggplot(pCors2.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors3.1 = cors3
pCors3.1$node=factor(pCors3.1$node, levels = c(order1))
p3.1=ggplot(pCors3.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors3.2 = cors3
pCors3.2$node=factor(pCors3.2$node, levels = c(order2))
p3.2=ggplot(pCors3.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors3.3 = cors3
pCors3.3$node=factor(pCors3.3$node, levels = c(order3))
p3.3=ggplot(pCors3.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors3.4 = cors3
pCors3.4$node=factor(pCors3.4$node, levels = c(order4))
p3.4=ggplot(pCors3.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors4.1 = cors4
pCors4.1$node=factor(pCors4.1$node, levels = c(order1))
p4.1=ggplot(pCors4.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors4.2 = cors4
pCors4.2$node=factor(pCors4.2$node, levels = c(order2))
p4.2=ggplot(pCors4.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors4.3 = cors4
pCors4.3$node=factor(pCors4.3$node, levels = c(order3))
p4.3=ggplot(pCors4.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors4.4 = cors4
pCors4.4$node=factor(pCors4.4$node, levels = c(order4))
p4.4=ggplot(pCors4.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
library(patchwork)
p1.1+p2.1+p3.1+p4.1+p1.2+p2.2+p3.2+p4.2+p1.3+p2.3+p3.3+p4.3+p1.4+p2.4+p3.4+p4.4
ggsave('Figs/repDrift_ot.pdf', units="in",width=5.5,height=2)
ggsave('Figs/repDrift_ot.pdf', units="in",width=8,height=8)
ggsave('Figs/repDrift_ot.pdf', units="in",width=8,height=7.5)
pCors1.1 = cors1
pCors1.1$node=factor(pCors1.1$node, levels = c(order1))
p1.1=ggplot(pCors1.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors1.2 = cors1
pCors1.2$node=factor(pCors1.2$node, levels = c(order2))
p1.2=ggplot(pCors1.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors1.3 = cors1
pCors1.3$node=factor(pCors1.3$node, levels = c(order3))
p1.3=ggplot(pCors1.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors1.4 = cors1
pCors1.4$node=factor(pCors1.4$node, levels = c(order4))
p1.4=ggplot(pCors1.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.1 = cors2
pCors2.1$node=factor(pCors2.1$node, levels = c(order1))
p2.1=ggplot(pCors2.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors2.2 = cors2
pCors2.2$node=factor(pCors2.2$node, levels = c(order2))
p2.2=ggplot(pCors2.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.3 = cors2
pCors2.3$node=factor(pCors2.3$node, levels = c(order3))
p2.3=ggplot(pCors2.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.4 = cors2
pCors2.4$node=factor(pCors2.4$node, levels = c(order4))
p2.4=ggplot(pCors2.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.1 = cors3
pCors3.1$node=factor(pCors3.1$node, levels = c(order1))
p3.1=ggplot(pCors3.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors3.2 = cors3
pCors3.2$node=factor(pCors3.2$node, levels = c(order2))
p3.2=ggplot(pCors3.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.3 = cors3
pCors3.3$node=factor(pCors3.3$node, levels = c(order3))
p3.3=ggplot(pCors3.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.4 = cors3
pCors3.4$node=factor(pCors3.4$node, levels = c(order4))
p3.4=ggplot(pCors3.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.1 = cors4
pCors4.1$node=factor(pCors4.1$node, levels = c(order1))
p4.1=ggplot(pCors4.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors4.2 = cors4
pCors4.2$node=factor(pCors4.2$node, levels = c(order2))
p4.2=ggplot(pCors4.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.3 = cors4
pCors4.3$node=factor(pCors4.3$node, levels = c(order3))
p4.3=ggplot(pCors4.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.4 = cors4
pCors4.4$node=factor(pCors4.4$node, levels = c(order4))
p4.4=ggplot(pCors4.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
library(patchwork)
p1.1+p2.1+p3.1+p4.1+p1.2+p2.2+p3.2+p4.2+p1.3+p2.3+p3.3+p4.3+p1.4+p2.4+p3.4+p4.4
pCors1.1 = cors1
pCors1.1$node=factor(pCors1.1$node, levels = c(order1))
p1.1=ggplot(pCors1.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors1.2 = cors1
pCors1.2$node=factor(pCors1.2$node, levels = c(order2))
p1.2=ggplot(pCors1.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors1.3 = cors1
pCors1.3$node=factor(pCors1.3$node, levels = c(order3))
p1.3=ggplot(pCors1.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors1.4 = cors1
pCors1.4$node=factor(pCors1.4$node, levels = c(order4))
p1.4=ggplot(pCors1.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank())
pCors2.1 = cors2
pCors2.1$node=factor(pCors2.1$node, levels = c(order1))
p2.1=ggplot(pCors2.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.2 = cors2
pCors2.2$node=factor(pCors2.2$node, levels = c(order2))
p2.2=ggplot(pCors2.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.3 = cors2
pCors2.3$node=factor(pCors2.3$node, levels = c(order3))
p2.3=ggplot(pCors2.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors2.4 = cors2
pCors2.4$node=factor(pCors2.4$node, levels = c(order4))
p2.4=ggplot(pCors2.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.1 = cors3
pCors3.1$node=factor(pCors3.1$node, levels = c(order1))
p3.1=ggplot(pCors3.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.2 = cors3
pCors3.2$node=factor(pCors3.2$node, levels = c(order2))
p3.2=ggplot(pCors3.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.3 = cors3
pCors3.3$node=factor(pCors3.3$node, levels = c(order3))
p3.3=ggplot(pCors3.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors3.4 = cors3
pCors3.4$node=factor(pCors3.4$node, levels = c(order4))
p3.4=ggplot(pCors3.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.1 = cors4
pCors4.1$node=factor(pCors4.1$node, levels = c(order1))
p4.1=ggplot(pCors4.1, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.2 = cors4
pCors4.2$node=factor(pCors4.2$node, levels = c(order2))
p4.2=ggplot(pCors4.2, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.3 = cors4
pCors4.3$node=factor(pCors4.3$node, levels = c(order3))
p4.3=ggplot(pCors4.3, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
pCors4.4 = cors4
pCors4.4$node=factor(pCors4.4$node, levels = c(order4))
p4.4=ggplot(pCors4.4, aes(x = as.factor(node), y = cor_eff))+
geom_bar(stat = "identity")+
scale_y_continuous(limits=c(-1,1),name='Node-Mvt Corr.')+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
library(patchwork)
p1.1+p2.1+p3.1+p4.1+p1.2+p2.2+p3.2+p4.2+p1.3+p2.3+p3.3+p4.3+p1.4+p2.4+p3.4+p4.4
ggsave('Figs/repDrift_ot.pdf', units="in",width=8,height=7.5)
meanspikes = data.table(pSpike=rowMeans(spikes[3600:7200]), Time = seq(3600,7200))
res=crqa(meanspikes$pSpike, meanspikes$pSpike, method = 'rqa',delay = 1, embed = 10, radius = .05,normalize=1 )
RP = res$RP
## define plotting arguments
par = list(unit = 1, labelx = "Time", labely = "Time",
cols = "black", pcex = .1, pch = 1,
labax = NULL,
labay = NULL,
las = 1)
plotRP(RP, par)
meanspikes = data.table(pSpike=rowMeans(spikes[1:2000]), Time = seq(1,2000))
ggplot(meanspikes, aes(x = Time, y = pSpike)) + geom_line()+
scale_y_continuous(name='Prop. Spiked')+
scale_x_continuous(limits=c(0,2000))
meanspikes = data.table(pSpike=rowMeans(spikes[3600:7200]), Time = seq(3600,7200))
ggplot(meanspikes, aes(x = Time, y = pSpike)) + geom_line()+
scale_y_continuous(name='Prop. Spiked')+
scale_x_continuous(limits=c(3600,7200))
ggsave('Figs/spikes2.pdf', units="in",width=4.5,height=2)
rm(list = ls(all = TRUE))
library(data.table)
library(tidyverse)
library(ggplot2)
library(rCAT)
library(BAMBI)
library(plotly)
library(gplots)
library(tseries)
setwd('/Users/jfalanda/Documents/GitHub/ReservoirModel_followups/Julia/ObjectTracking')
spikes = as.data.table(read.csv("Data/spikes.csv"))
heading = as.data.table(read.csv("Data/heading.csv"))
colnames(heading)='heading'
sens= as.data.table(read.csv("Data/sens.csv"))
eff = as.data.table(read.csv("Data/eff.csv"))
stim = as.data.table(read.csv("Data/stim.csv"))
acts = as.data.table(read.csv("Data/acts.csv"))
t = seq(1,nrow(spikes))
heading$t = t
sens$t = t
eff$t = t
stim$t = t
acts$t = t
#####
stim$agent = 0
heading$agent=1
plotdata = rbind(heading, stim)
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(3600,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','grey50'))
#sca
#scale_linetype_discrete(name = NULL,labels= c("Stimulus","Agent"))
ggsave('Figs/heading_ot2.pdf', units="in",width=5.5,height=2)
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','grey50'))
#scale_linetype_discrete(name = NULL,labels= c("Stimulus","Agent"))
ggsave('Figs/heading_ot3.pdf', units="in",width=5.5,height=2)
meanspikes = data.table(pSpike=rowMeans(spikes[0:7200]), Time = seq(0,7200))
ggplot(meanspikes, aes(x = Time, y = pSpike)) + geom_line()+
scale_y_continuous(name='Prop. Spiked')+
scale_x_continuous(limits=c(0,7200))
ggsave('Figs/spikes3.pdf', units="in",width=4.5,height=2)
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','grey50'))
#scale_linetype_discrete(name = NULL,labels= c("Stimulus","Agent"))
ggsave('Figs/heading_ot3.pdf', units="in",width=5.5,height=1)
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','red50'))
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','red'))
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','darkred'))
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','red'))
ggplot(plotdata, aes(x = t, y = rad2deg(heading), color = as.factor(agent),group=as.factor(agent))) +
geom_point(size=1,alpha=.8)+
scale_x_continuous(limits = c(0,7200),name="Time")+
scale_y_continuous(name = "Heading (deg.)")+
scale_color_manual(name = NULL, labels = c("Stimulus", "Agent"), values = c('black','red'))
#scale_linetype_discrete(name = NULL,labels= c("Stimulus","Agent"))
ggsave('Figs/heading_ot3.pdf', units="in",width=5.5,height=1.5)
###
plotdata = t(as.matrix(spikes[0:7200]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
res = cor(plotdata)
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet")# %>%
p
7200*7200
###
plotdata = t(as.matrix(spikes[0:7200]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
###
plotdata = t(as.matrix(spikes[0:200]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
res = cor(plotdata)
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet")# %>%
p
test=t(res)
p <- plot_ly(z = test, type = "heatmap", colorscale = "Jet")# %>%
layout(yaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250))),
xaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250)))
)
p
res = upper.tri(cor(plotdata))
p <- plot_ly(z = test, type = "heatmap", colorscale = "Jet")# %>%
layout(yaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250))),
xaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250)))
)
p
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet")# %>%
p
res = cor(plotdata)
upper.tri(res)
res=res[upper.tri(res)]
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet")# %>%
# layout(yaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250))),
#        xaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250)))
#        )
p
res = cor(plotdata)
res=res[upper.tri(res),]
res = cor(plotdata)
res=res[upper.tri(res),]
res = cor(plotdata)
res=res[upper.tri(res),ncol(res)]
###
plotdata = t(as.matrix(spikes[2000:4000]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
res = cor(plotdata)
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet")# %>%
# layout(yaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250))),
#        xaxis = list(tickmode="array",tickvals = seq(0,7200,250),ticktext=as.character(seq(1000,2000,250)))
#        )
p
###
plotdata = t(as.matrix(spikes[2000:4000]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet") %>%
layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
xaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250)))
)
p
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet") %>%
layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
xaxis = list(tickmode="array",ticktext=as.character(seq(2000,4000,250)))
)
p
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet") %>%
layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
xaxis = list(tickmode="array",ticktext=seq(2000,4000,250))
)
###
plotdata = t(as.matrix(spikes[1:4000]))
rem=c()
for(i in 1:nrow(plotdata)){
sd = sd(plotdata[,i])
if(sd == 0){
rem=c(rem, i)
}
}
plotdata = plotdata[,-rem]
res = cor(plotdata)
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet") %>%
layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
xaxis = list(tickmode="array",ticktext=seq(2000,4000,250))
)
p <- plot_ly(z = res, type = "heatmap", colorscale = "Jet") #%>%
# layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
#        xaxis = list(tickmode="array",ticktext=seq(2000,4000,250))
#        )
p
# layout(yaxis = list(tickmode="array",tickvals = seq(2000,4000,250),ticktext=as.character(seq(2000,4000,250))),
#        xaxis = list(tickmode="array",ticktext=seq(2000,4000,250))
#        )
p
Heatmap(
res,
col = circlize::colorRamp2(c(0, 1.5, 3), c("white", "darkorange", "black")),
cluster_rows = FALSE, cluster_columns = FALSE,
show_heatmap_legend = FALSE,
use_raster = TRUE,
raster_resize = TRUE, raster_device = "png",
column_title = "With rasterisation"
)
install.package("ComplexHeatmap")
install(ComplexHeatmap)
install.package(ComplexHeatmap)
install.packages(ComplexHeatmap)
install.packages('ComplexHeatmap')
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library('devtools')
install.packages('devtools')
install.packages("devtools")
library(devtools)
library(devtools)
install.packages('htmltools')
install.packages("htmltools")
library(devtools)
